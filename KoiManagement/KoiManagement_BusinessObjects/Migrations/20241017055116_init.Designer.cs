// <auto-generated />
using System;
using KoiManagement_BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoiManagement_BusinessObjects.Migrations
{
    [DbContext(typeof(KoiManagementContext))]
    [Migration("20241017055116_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KoiManagement_BusinessObjects.Achievement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("KoiId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KoiId");

                    b.HasIndex("ResultId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Variety")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Competition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxApplication")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.CompetitionCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompetitionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompetitionId");

                    b.ToTable("CompetitionCategories");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.CompetitionRound", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CompetitionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("KoiId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoundId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("KoiId");

                    b.HasIndex("RoundId");

                    b.ToTable("CompetitionRounds");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Criteria", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Percent")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.CriteriaPoint", b =>
                {
                    b.Property<string>("RefereeMarkId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CriteriaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Point")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RefereeMarkId", "CriteriaId");

                    b.HasIndex("CriteriaId");

                    b.ToTable("CriteriaPoints");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Koi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Variety")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Kois");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Mark", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CompetitionRoundId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Point")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionRoundId");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Prediction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CompetitionRoundId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Point")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionRoundId");

                    b.HasIndex("UserId");

                    b.ToTable("Predictions");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.RefereeMark", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CompetitionRoundId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarkId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Point")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionRoundId");

                    b.HasIndex("MarkId");

                    b.HasIndex("UserId");

                    b.ToTable("RefereeMarks");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Registration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompetitionCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCheckIn")
                        .HasColumnType("bit");

                    b.Property<string>("KoiId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionCategoryId");

                    b.HasIndex("KoiId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Result", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("FinalMark")
                        .HasColumnType("float");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Round", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Achievement", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.Koi", "Koi")
                        .WithMany("Achievements")
                        .HasForeignKey("KoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.Result", "Result")
                        .WithMany("Achievements")
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Koi");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.CompetitionCategory", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.Category", "Category")
                        .WithMany("CompetitionCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.Competition", "Competition")
                        .WithMany("CompetitionCategories")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.CompetitionRound", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.Competition", "Competition")
                        .WithMany("CompetitionRounds")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.Koi", "Koi")
                        .WithMany("CompetitionRounds")
                        .HasForeignKey("KoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.Round", "Round")
                        .WithMany("CompetitionRounds")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competition");

                    b.Navigation("Koi");

                    b.Navigation("Round");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.CriteriaPoint", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.Criteria", "Criteria")
                        .WithMany("CriteriaPoints")
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.RefereeMark", "RefereeMark")
                        .WithMany("CriteriaPoints")
                        .HasForeignKey("RefereeMarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criteria");

                    b.Navigation("RefereeMark");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Koi", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.User", "User")
                        .WithMany("Kois")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Mark", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.CompetitionRound", "CompetitionRound")
                        .WithMany("Marks")
                        .HasForeignKey("CompetitionRoundId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompetitionRound");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Prediction", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.CompetitionRound", "CompetitionRound")
                        .WithMany("Predictions")
                        .HasForeignKey("CompetitionRoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.User", "User")
                        .WithMany("Predictions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompetitionRound");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.RefereeMark", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.CompetitionRound", "CompetitionRound")
                        .WithMany("RefereeMarks")
                        .HasForeignKey("CompetitionRoundId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.Mark", "Mark")
                        .WithMany("RefereeMarks")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.User", "User")
                        .WithMany("RefereeMarks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompetitionRound");

                    b.Navigation("Mark");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Registration", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.CompetitionCategory", "CompetitionCategory")
                        .WithMany("Registrations")
                        .HasForeignKey("CompetitionCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.Koi", "Koi")
                        .WithMany("Registrations")
                        .HasForeignKey("KoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompetitionCategory");

                    b.Navigation("Koi");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Result", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.Registration", "Registration")
                        .WithMany("Results")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.UserRole", b =>
                {
                    b.HasOne("KoiManagement_BusinessObjects.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiManagement_BusinessObjects.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Category", b =>
                {
                    b.Navigation("CompetitionCategories");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Competition", b =>
                {
                    b.Navigation("CompetitionCategories");

                    b.Navigation("CompetitionRounds");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.CompetitionCategory", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.CompetitionRound", b =>
                {
                    b.Navigation("Marks");

                    b.Navigation("Predictions");

                    b.Navigation("RefereeMarks");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Criteria", b =>
                {
                    b.Navigation("CriteriaPoints");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Koi", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("CompetitionRounds");

                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Mark", b =>
                {
                    b.Navigation("RefereeMarks");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.RefereeMark", b =>
                {
                    b.Navigation("CriteriaPoints");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Registration", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Result", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.Round", b =>
                {
                    b.Navigation("CompetitionRounds");
                });

            modelBuilder.Entity("KoiManagement_BusinessObjects.User", b =>
                {
                    b.Navigation("Kois");

                    b.Navigation("Predictions");

                    b.Navigation("RefereeMarks");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
